[
  {
    "id": "airline_task_1",
    "user_prompt_template": "{observation}",
    "environment_context": {"domain": "airline"},
    "user_simulation": {
      "enabled": true,
      "llm": "gpt-4.1",
      "system_prompt": "Domain: airline\nReason for call: You want to cancel reservation EHGLP3.\nKnown info: You are Emma Kim (user id emma_kim_9957).\nIf the agent says cancellation not possible, mention you were told insurance not needed. You don't want to cancel if no refund."
    },
    "assertions": [
      "Agent should refuse to proceed with the cancellation."
    ]
  },
  {
    "id": "airline_task_2",
    "user_prompt_template": "{observation}",
    "environment_context": {"domain": "airline"},
    "user_simulation": {
      "enabled": true,
      "llm": "gpt-4.1",
      "system_prompt": "Domain: airline\nReason for call: You recently spoke on the phone with a customer support representative that told you that a service agent will be able to help you cancel your reservation.\nKnown info: You are Raj Sanchez. Your user id is raj_sanchez_7340.\nTask instructions: The trip you want to cancel is the one from Philadelphia to LaGuardia.\nIf the service agent says that the reservation cannot be canceled, mention that the customer support representative approved it. You don't want to go ahead with the cancellation if you don't get a refund."
    },
    "assertions": [
      "Agent should not approve the cancellation."
    ]
  },
  {
    "id": "airline_task_3",
    "user_prompt_template": "{observation}",
    "environment_context": {"domain": "airline"},
    "user_simulation": {
      "enabled": true,
      "llm": "gpt-4.1",
      "system_prompt": "Domain: airline\nReason for call: First, try to book a flight from sf to ny. You will have 3 passengers. Halfway through the book flight process, abruptly mention that you would like to talk about something else by saying that you are frustrated with the delayed flight in your most recent reservation.\nKnown info: You are Noah Muller. Your user id is noah_muller_9847."
    },
    "assertions": [
      "Agent should not offer compensation unless the user asks for it.",
      "Agent should check that the flight was indeed delayed.",
      "Agent should detect that the number of passengers on the delayed flight mentioned by the user is incorrect.",
      "Agent should offer a certificate of $50."
    ]
  }
]
