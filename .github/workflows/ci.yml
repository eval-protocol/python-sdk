name: Python CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

jobs:
  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install flake8 mypy types-docker types-requests types-PyYAML types-setuptools

      - name: Lint with flake8
        run: flake8 reward_kit tests examples scripts --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Type check with mypy
        run: mypy reward_kit

  test-core:
    name: Core Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,trl,openevals]" # Install all deps for core tests
          pip install pytest-cov pytest-asyncio pytest-xdist
          pip install e2b || echo "e2b not available, some tests may be skipped"

      - name: Run Core Tests with pytest-xdist
        env:
          E2B_API_KEY: ${{ secrets.E2B_API_KEY }}
          FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
          FIREWORKS_ACCOUNT_ID: ${{ secrets.FIREWORKS_ACCOUNT_ID }}
          PYTHONWARNINGS: "ignore::DeprecationWarning,ignore::RuntimeWarning"
        run: |
          # Run most tests in parallel, but explicitly ignore the new, complex batch evaluation tests
          pytest \
            -n auto \
            --ignore=tests/test_batch_evaluation.py \
            --cov=reward_kit --cov-append --cov-report=xml --cov-report=term-missing -v --durations=10

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-core-${{ matrix.python-version }}
          path: coverage.xml
          retention-days: 1

  test-batch-evaluation:
    name: Batch Evaluation Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-3.12-${{ hashFiles('**/pyproject.toml', '**/setup.py') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,trl]"
          pip install pytest-cov pytest-asyncio
          pip install e2b || echo "e2b not available, some tests may be skipped"
      - name: Run Batch Evaluation Tests
        env:
          E2B_API_KEY: ${{ secrets.E2B_API_KEY }}
          FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
          FIREWORKS_ACCOUNT_ID: ${{ secrets.FIREWORKS_ACCOUNT_ID }}
          PYTHONWARNINGS: "ignore::DeprecationWarning,ignore::RuntimeWarning"
        run: |
          # Run only this specific test file, WITHOUT xdist
          pytest tests/test_batch_evaluation.py --cov=reward_kit --cov-append --cov-report=xml -v --durations=10
      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-batch-eval
          path: coverage.xml
          retention-days: 1

  upload-coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: [test-core, test-batch-evaluation]
    steps:
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: coverage-artifacts
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage-artifacts/
          fail_ci_if_error: false
          verbose: true

  build-package:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test-core, test-batch-evaluation]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install build dependencies
      run: python -m pip install --upgrade pip build
    - name: Build package
      run: python -m build
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: reward-kit-package
        path: dist/
